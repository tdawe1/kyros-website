---
// Floating Navigation component for jumping between sections
---

<div class="floating-nav">
  <button class="nav-arrow nav-up" title="Scroll Up">
    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
      <path d="M18 15l-6-6-6 6"/>
    </svg>
  </button>
  <button class="nav-arrow nav-down" title="Scroll Down">
    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
      <path d="M6 9l6 6 6-6"/>
    </svg>
  </button>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const navUp = document.querySelector('.nav-up');
    const navDown = document.querySelector('.nav-down');
    const floatingNav = document.querySelector('.floating-nav');
    
    // Define sections in order
    const sections = [
      'hero',
      'why-us', 
      'process',
      'case-studies',
      'industries',
      'final-cta',
      'testimonials'
    ];
    
    let currentSectionIndex = 0;
    
    // Scroll to section function
    function scrollToSection(sectionId: string) {
      const section = document.getElementById(sectionId);
      if (section) {
        section.scrollIntoView({
          behavior: 'smooth',
          block: 'start'
        });
      }
    }
    
    // Navigate to previous section
    function scrollUp() {
      if (currentSectionIndex > 0) {
        currentSectionIndex--;
        const sectionId = sections[currentSectionIndex];
        scrollToSection(sectionId);
      }
    }
    
    // Navigate to next section
    function scrollDown() {
      if (currentSectionIndex < sections.length - 1) {
        currentSectionIndex++;
        const sectionId = sections[currentSectionIndex];
        scrollToSection(sectionId);
      }
    }
    
    // Update current section based on scroll position
    function updateCurrentSection() {
      const scrollPos = window.scrollY + 200;
      
      sections.forEach((sectionId, index) => {
        const section = document.getElementById(sectionId);
        if (section instanceof HTMLElement) {
          const sectionTop = section.offsetTop;
          const sectionHeight = section.offsetHeight;
          
          if (scrollPos >= sectionTop && scrollPos < sectionTop + sectionHeight) {
            currentSectionIndex = index;
          }
        }
      });
    }
    
    // Hide/show floating nav based on menu state
    function toggleFloatingNav() {
      const menuOverlay = document.getElementById('menu-overlay');
      if (menuOverlay && floatingNav) {
        if (menuOverlay.classList.contains('is-open')) {
          floatingNav.classList.add('hidden');
        } else {
          floatingNav.classList.remove('hidden');
        }
      }
    }
    
    // Add click events
    if (navUp) {
      navUp.addEventListener('click', scrollUp);
    }
    
    if (navDown) {
      navDown.addEventListener('click', scrollDown);
    }
    
    // Listen for scroll events to update current section
    window.addEventListener('scroll', updateCurrentSection);
    
    // Listen for menu state changes
    const observer = new MutationObserver(toggleFloatingNav);
    const menuOverlay = document.getElementById('menu-overlay');
    if (menuOverlay) {
      observer.observe(menuOverlay, {
        attributes: true,
        attributeFilter: ['class']
      });
    }
    
    // Initial section detection
    updateCurrentSection();
    
    // Initial menu state check
    toggleFloatingNav();
  });
</script>

<style>
  .floating-nav {
    position: fixed;
    right: 2rem;
    top: 50%;
    transform: translateY(-50%);
    display: flex;
    flex-direction: column;
    gap: 1rem;
    z-index: 1000;
    transition: all 0.3s ease;
  }
  
  .floating-nav.hidden {
    opacity: 0;
    pointer-events: none;
    transform: translateY(-50%) translateX(20px);
  }
  
  .nav-arrow {
    width: 48px;
    height: 48px;
    border-radius: 50%;
    background: linear-gradient(135deg, var(--accent-blue) 0%, var(--electric-blue-dark) 100%);
    color: white;
    border: none;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 4px 15px rgba(0, 123, 255, 0.3);
  }
  
  .nav-arrow:hover {
    transform: scale(1.1);
    box-shadow: 0 6px 20px rgba(0, 123, 255, 0.4);
  }
  
  .nav-arrow svg {
    transition: all 0.3s ease;
  }
  
  .nav-arrow:hover svg {
    transform: scale(1.1);
  }
  
  /* Responsive Design */
  @media (max-width: 768px) {
    .floating-nav {
      right: 1rem;
      gap: 0.75rem;
    }
    
    .nav-arrow {
      width: 40px;
      height: 40px;
    }
  }
  
  @media (max-width: 480px) {
    .floating-nav {
      right: 0.5rem;
    }
    
    .nav-arrow {
      width: 36px;
      height: 36px;
    }
  }
</style>
