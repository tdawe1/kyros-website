---
// API endpoint for handling contact form submissions
import { saveContact } from '../../lib/database.js';

export async function POST({ request }) {
  try {
    const formData = await request.formData();
    
    // Extract form data
    const name = formData.get('name');
    const company = formData.get('company');
    const email = formData.get('email');
    const phone = formData.get('phone');
    const industry = formData.get('industry');
    const message = formData.get('message');
    
    // Basic validation
    if (!name || !company || !email) {
      return new Response(JSON.stringify({
        success: false,
        message: 'Please fill in all required fields.'
      }), {
        status: 400,
        headers: {
          'Content-Type': 'application/json'
        }
      });
    }
    
    // Email validation
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(email)) {
      return new Response(JSON.stringify({
        success: false,
        message: 'Please enter a valid email address.'
      }), {
        status: 400,
        headers: {
          'Content-Type': 'application/json'
        }
      });
    }
    
    // Prepare contact data
    const contactData = {
      name: name.toString().trim(),
      company: company.toString().trim(),
      email: email.toString().trim(),
      phone: phone ? phone.toString().trim() : null,
      industry: industry ? industry.toString().trim() : null,
      message: message ? message.toString().trim() : null
    };
    
    // Save to database
    const dbResult = await saveContact(contactData);
    
    if (!dbResult.success) {
      throw new Error('Failed to save contact to database');
    }
    
    // Prepare email content for future email service integration
    const emailContent = `
New Discovery Call Request

Name: ${contactData.name}
Company: ${contactData.company}
Email: ${contactData.email}
Phone: ${contactData.phone || 'Not provided'}
Industry: ${contactData.industry || 'Not specified'}

Message:
${contactData.message || 'No additional message provided'}

Contact ID: ${dbResult.id}
---
This form was submitted from the kyros website.
    `.trim();
    
    // Log successful submission
    console.log('Contact form submission saved to database:', {
      id: dbResult.id,
      name: contactData.name,
      company: contactData.company,
      email: contactData.email,
      timestamp: new Date().toISOString()
    });
    
    // TODO: Integrate with email service
    // Example with SendGrid:
    // await sendEmail({
    //   to: 'hello@kyros.com',
    //   subject: 'New Discovery Call Request',
    //   text: emailContent
    // });
    
    return new Response(JSON.stringify({
      success: true,
      message: 'Thank you! We\'ll be in touch within 2 hours to confirm your discovery call.',
      contactId: dbResult.id
    }), {
      status: 200,
      headers: {
        'Content-Type': 'application/json'
      }
    });
    
  } catch (error) {
    console.error('Contact form error:', error);
    
    return new Response(JSON.stringify({
      success: false,
      message: 'Something went wrong. Please try again or contact us directly.'
    }), {
      status: 500,
      headers: {
        'Content-Type': 'application/json'
      }
    });
  }
}
---
